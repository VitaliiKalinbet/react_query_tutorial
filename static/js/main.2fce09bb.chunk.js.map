{"version":3,"sources":["components/Navbar.js","components/Planet.js","components/Planets.js","components/Person.js","components/People.js","App.js","index.js"],"names":["Navbar","setPage","onClick","Planet","planet","className","name","population","terrain","fetchPlanets","key","page","a","console","log","fetch","queryKey","res","json","Planets","useState","useQuery","keepPreviousData","data","status","old","Math","max","disabled","next","results","map","Person","person","gender","birth_year","fetchPeople","People","queryClient","QueryClient","App","QueryClientProvider","client","initialIsOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAWeA,EATA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACb,OACI,gCACI,wBAAQC,QAAS,kBAAMD,EAAQ,YAA/B,qBACA,wBAAQC,QAAS,kBAAMD,EAAQ,WAA/B,wB,+BCMGE,EAVA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,sBAAKC,UAAU,OAAf,UACE,6BAAMD,EAAOE,OACb,8CAAkBF,EAAOG,cACzB,2CAAeH,EAAOI,eCKtBC,EAAY,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,6DACnBC,QAAQC,IAAI,WAAYJ,GACxBG,QAAQC,IAAI,YAAaH,GAFN,SAGDI,MAAM,sCAAD,OACiBL,EAAIM,SAAS,KAJlC,cAGbC,EAHa,yBAMZA,EAAIC,QANQ,2CAAH,wDAuDHC,EA9CC,WAAO,IAAD,EACIC,mBAAS,GADb,mBACbT,EADa,KACPV,EADO,OAGKoB,YAAS,CAAC,UAAWV,GAAOF,EAAc,CACjEa,kBAAkB,IADZC,EAHY,EAGZA,KAAMC,EAHM,EAGNA,OAId,OACE,gCACE,yCAOY,UAAXA,EAAqB,sDAAiC,KAE3C,YAAXA,EAAuB,kDAA6B,KAEzC,YAAXA,GACC,oCACE,wBACEtB,QAAS,kBAAMD,GAAQ,SAACwB,GAAD,OAASC,KAAKC,IAAIF,EAAM,EAAG,OAClDG,SAAmB,IAATjB,EAFZ,2BAMA,+BAAOA,IACP,wBACET,QAAS,kBAAMD,GAAQ,SAACwB,GAAD,OAASA,EAAM,MACtCG,UAAWL,IAASA,EAAKM,KAF3B,uBAMA,8BACGN,EAAKO,QAAQC,KAAI,SAAC3B,GAAD,OAChB,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAOE,kBC9CnB0B,EAVA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,sBAAK5B,UAAU,OAAf,UACE,6BAAM4B,EAAO3B,OACb,0CAAc2B,EAAOC,UACrB,8CAAkBD,EAAOE,kBCHzBC,EAAW,uCAAG,4BAAAxB,EAAA,sEACAG,MAAM,gCADN,cACZE,EADY,yBAEXA,EAAIC,QAFO,2CAAH,qDA+BFmB,EA1BA,WAAO,IAAD,EACMhB,YAAS,SAAUe,GAApCb,EADW,EACXA,KAAMC,EADK,EACLA,OAGd,OACE,gCACE,wCAGY,YAAXA,GACC,+CAGU,UAAXA,GACC,sDAGU,YAAXA,GACC,8BACID,EAAKO,QAAQC,KAAI,SAAAE,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAO3B,e,wBCrBrDgC,EAAc,IAAIC,IAqBTC,MAnBf,WAAgB,IAAD,EACWpB,mBAAS,WADpB,mBACNT,EADM,KACAV,EADA,KAGb,OACE,mCACE,eAACwC,EAAA,EAAD,CAAqBC,OAAQJ,EAA7B,UACE,sBAAKjC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CAAQJ,QAASA,IACjB,qBAAKI,UAAU,UAAf,SACY,YAATM,EAAqB,cAAC,EAAD,IAAc,cAAC,EAAD,SAGxC,cAAC,qBAAD,CAAoBgC,eAAe,UCjB3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2fce09bb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = ({setPage}) => {\n    return (\n        <nav>\n            <button onClick={() => setPage('planets')}>Planets</button>\n            <button onClick={() => setPage('people')}>People</button>\n        </nav>\n    );\n};\n\nexport default Navbar;","import React from 'react';\n\nconst Planet = ({ planet }) => {\n  return (\n    <div className=\"card\">\n      <h3>{ planet.name }</h3>\n      <p>Population - { planet.population }</p>\n      <p>Terrain - { planet.terrain }</p>\n    </div>\n  );\n}\n \nexport default Planet;","import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Planet from \"./Planet\";\n\n// const fetchPlanets = async (key, greeting, page) => {\n//     console.log('key :>> ', key);\n//     console.log('greeting :>> ', greeting);\n//     console.log('page :>> ', page);\n//     const res = await fetch(`http://swapi.dev/api/planets/?page=${key.queryKey[2]}`);\n//     return res.json();\n// };\n\nconst fetchPlanets = async (key, page) => {\n  console.log(\"key :>> \", key);\n  console.log(\"page :>> \", page);\n  const res = await fetch(\n    `http://swapi.dev/api/planets/?page=${key.queryKey[1]}`\n  );\n  return res.json();\n};\n\nconst Planets = () => {\n  const [page, setPage] = useState(1);\n  // const {data, status} = useQuery(['planets', page], fetchPlanets);\n  const { data, status } = useQuery([\"planets\", page], fetchPlanets, {\n    keepPreviousData: true,\n  });\n\n  return (\n    <div>\n      <h2>Planets</h2>\n      {/* <p>{status}</p> */}\n\n      {/* <button onClick={() => setPage(1)}>page 1</button>\n      <button onClick={() => setPage(2)}>page 2</button>\n      <button onClick={() => setPage(3)}>page 3</button> */}\n\n      {status === \"error\" ? <div>Error fetching data</div> : null}\n\n      {status === \"loading\" ? <div>Loading data...</div> : null}\n\n      {status === \"success\" && (\n        <section>\n          <button\n            onClick={() => setPage((old) => Math.max(old - 1, 1))}\n            disabled={page === 1}\n          >\n            Previous Page\n          </button>\n          <span>{page}</span>\n          <button\n            onClick={() => setPage((old) => old + 1)}\n            disabled={!data || !data.next}\n          >\n            Next page\n          </button>\n          <div>\n            {data.results.map((planet) => (\n              <Planet key={planet.name} planet={planet} />\n            ))}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n\nexport default Planets;\n","import React from 'react';\n\nconst Person = ({ person }) => {\n  return (\n    <div className=\"card\">\n      <h3>{ person.name }</h3>\n      <p>Gender - { person.gender }</p>\n      <p>Birth year - { person.birth_year }</p>\n    </div>\n  );\n}\n \nexport default Person;\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Person from './Person';\n\nconst fetchPeople = async () => {\n  const res = await fetch('http://swapi.dev/api/people/');\n  return res.json();\n}\n\nconst People = () => {\n  const { data, status } = useQuery('people', fetchPeople);\n  // console.log(data);\n\n  return (\n    <div>\n      <h2>People</h2>\n      {/* { status } */}\n\n      {status === 'loading' && (\n        <div>Loading data</div>\n      )}\n\n      {status === 'error' && (\n        <div>Error fetching data</div>\n      )}\n\n      {status === 'success' && (\n        <div>\n          { data.results.map(person => <Person key={person.name} person={person} /> ) }\n        </div>\n      )} \n    </div>\n  );\n}\n \nexport default People;\n","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Planets from \"./components/Planets\";\nimport People from \"./components/People\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [page, setPage] = useState(\"planets\");\n\n  return (\n    <>\n      <QueryClientProvider client={queryClient}>\n        <div className=\"App\">\n          <h1>Star wars info</h1>\n          <Navbar setPage={setPage} />\n          <div className=\"content\">\n            {page === \"planets\" ? <Planets /> : <People />}\n          </div>\n        </div>\n        <ReactQueryDevtools initialIsOpen={false} />\n      </QueryClientProvider>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}